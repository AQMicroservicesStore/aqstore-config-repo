openapi: "3.0.2"
info:
  title: aqstore-warehouse-service
  version: 1.0.0
  contact:
    name: API SUPPORT
    email: apisupport@example.com
  license:
    name: MIT License
    url: https://mit-license.org/
servers:
  - url: https://localhost:8050/warehouse/api/v1


components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    GenericError:
      description: Generic Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  
  
  schemas:
    int16Unsigned:
      type: integer
      format: int16
      minimum: 0
      maximum: 32767
    id_int64Unsigned:
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854775807
      readOnly: true
    limitPerPage:
      description: the limit of the items to return
      type: integer
      format: int16
      minimum: 1
      maximum: 50
      default: 25
    floatPrice:
      description: price in float
      type: number
      format: float
      minimum: 0
      maximum: 1000
    intWeigth:
      description: weigth size
      type: integer
      format: int16
      minimum: 1
      maximum: 40

    page:
       type: integer
       format: int16
       minimum: 1
       maximum: 32767
       default: 1
    safetextName:
      description: Safe text for Name
      type: string
      pattern: '^[a-zA-Z0-9 .-]+$'
      minLength: 3
      maxLength: 50
    safetextMessages:
      description: Safe text for Name
      type: string
      pattern: '^[a-zA-Z0-9 .-]+$'
      minLength: 3
      maxLength: 100
    Error:
      type: object
      additionalProperties: false
      description: Error Details
      properties:
        errorCode:
          type: string
          pattern: '^[0-9]{4}$'
          minLength: 4
          maxLength: 4
        errorMessage:
          $ref: '#/components/schemas/safetextMessages'
        datetime:
          type: string
          format: date-time
          maxLength: 24
          default: iso-date-time
      required:
        - errorCode
        - errorMessage
        - datetime
      example:
        code: 1010
        message: Products not found
    StockItemType:
      type: string
      description: Type of a book
      enum:
        - MULTIMEDIA
        - GAMING
        - DOMOTIC
        - MUSIC
        - OTHERS
      example: GAMING
    Brand:
      type: object
      additionalProperties: false
      description: the Brand of the Product
      properties:
        id:
          $ref: '#/components/schemas/id_int64Unsigned'
        brandName:
          $ref: '#/components/schemas/safetextName'
      required:
        - brandName
      example:
        id: 2
        brandName: Microsoft
    StockItem:
      type: object
      additionalProperties: false
      description: Stock Item's info
      properties:
        id:
          $ref: '#/components/schemas/id_int64Unsigned'
        productName:
          $ref: '#/components/schemas/safetextName'
        quantity:
          $ref: '#/components/schemas/int16Unsigned'
        purchaseCost:
          $ref: '#/components/schemas/floatPrice'
        priceToSell:
          $ref: '#/components/schemas/floatPrice'
        productType:
          $ref: '#/components/schemas/StockItemType'
        brand:
          $ref: '#/components/schemas/Brand'
        weigth:
          $ref: '#/components/schemas/intWeigth'
      required:
        - productName
        - itemsAvailable
        - purchaseCost
        - priceToSell
        - productType
        - brand
        - weigth
      example:
        id: 1
        productName: Playstation 5 Digital
        itemsAvailable: 0
        purchaseCost: 440
        priceToSell: 499
        productType: GAMING
        weigth: 10
        brand:
          id: 2
          brandName: Microsoft

paths:
  /stock:
    post:
      summary: Add New Product
      operationId: addProduct
      tags:
        - Stock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockItem'
        required: true
        x-codegen-request-body-name: body
      responses:
        200:
          description: A created Product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockItem"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/GenericError'
          
  /stock/{stockId}:
    put:
      operationId: updateProduct
      summary: updates the available quantities of a product
      tags:
        - Stock
      parameters:
        - name: stockId
          in: path
          required: true
          description: the identify of product to retrieve
          schema:
            $ref: '#/components/schemas/id_int64Unsigned'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockItem'
        required: true
        x-codegen-request-body-name: body
      responses:
        200:
          description: The Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockItem'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/GenericError'
    delete:
      operationId: deleteProduct
      summary: updates the available quantities of a product
      tags:
        - Stock
      parameters:
        - name: stockId
          in: path
          required: true
          description: the identify of product to remoove
          schema:
            $ref: '#/components/schemas/id_int64Unsigned'
      responses:
        200:
          description: The Product deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockItem'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/GenericError'    
  



